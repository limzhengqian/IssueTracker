/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BugsLife;

import java.sql.SQLException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author user
 */
public class DailyReportDashBoard extends javax.swing.JFrame {

    /**
     * Creates new form DailyReportDashBoard
     */
    private IssuesDAO iss;
    private ArrayList<Issue> isslist;
    private int projectIndex;

    public DailyReportDashBoard() {
        initComponents();
    }

    DailyReportDashBoard(int projectIndex) throws SQLException {
        //get projectindex from previous class
        this.projectIndex = projectIndex;
        //initialise IssuesDAO
        this.iss = new IssuesDAO();
        //get all issue of certain project ID from database and pass into Java ArrayList
        this.isslist = iss.getAllIssue(projectIndex + 1);
        //initialise components of the GUI
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        DefaultMutableTreeNode top=new DefaultMutableTreeNode("projects");
        ArrayList<Integer>checkdupeyears=new ArrayList<>();
        ArrayList<String>checkdupedayss=new ArrayList<>();
        for(int i=0;i<isslist.size();i++){
            long timestamp=isslist.get(i).getTimestamp();
            Date date1=new Date(timestamp*1000L);
            LocalDate date=date1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            System.out.println(date.getYear());
            if(!checkdupeyears.contains(date.getYear())){
                DefaultMutableTreeNode tops=new DefaultMutableTreeNode(date.getYear());
                for(int j=0;j<isslist.size();j++){
                    long timestamps=isslist.get(j).getTimestamp();
                    Date date12=new Date(timestamps*1000L);
                    LocalDate dates=date12.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    System.out.println(dates.getYear());
                    String datetostring=dates.getYear()+"."+dates.getMonth()+"."+dates.getDayOfMonth();
                    if(dates.getYear()==date.getYear()){
                        if(!checkdupedayss.contains(datetostring)){
                            DefaultMutableTreeNode days=new DefaultMutableTreeNode(datetostring);
                            tops.add(days);
                            checkdupedayss.add(datetostring);
                        }
                    }
                }
                checkdupeyears.add(date.getYear());
                top.add(tops);
            }
        }
        jTree1 = new javax.swing.JTree(top);
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTree1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTree1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("List of Daily Report Available");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //if the jtree is clicked
    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        // TODO add your handling code here:
        //initialise the year, month and day
        int year = 0;
        String monthstr = "";
        int day = 0;
        //get the location you click
        TreePath tp = jTree1.getPathForLocation(evt.getX(), evt.getY());
        //if click once (means you choose the file)
        if (evt.getClickCount() == 1) {
            //get the last component of the whole path you click (the date)
            String stringdate = tp.getLastPathComponent().toString();
            //split the date
            String[] splitstr = stringdate.split("\\.");
            //get the splitted 1st part as the year
            year = Integer.parseInt(splitstr[0]);
            //splitted second part as the month
            monthstr = splitstr[1];
            //splitted 3rd part is the day
            day = Integer.parseInt(splitstr[2]);
            try {
                //call DailyReport class to display report
                new DailyReport(projectIndex, year, monthstr, day);
            } catch (SQLException ex) {
                Logger.getLogger(DailyReportDashBoard.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jTree1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DailyReportDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DailyReportDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DailyReportDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DailyReportDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DailyReportDashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
